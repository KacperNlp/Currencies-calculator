{"version":3,"sources":["components/AppContext.js","components/ActiveCurrency.jsx","components/BaseCurrencyForm.jsx","components/ConverterForm.jsx","components/CurrencyTableRow.jsx","components/CurrenciesTable.jsx","components/CurrenciesList.jsx","components/ErrorWithAPI.jsx","components/SiteContent.jsx","components/App.js","reportWebVitals.js","index.js"],"names":["defaultContextProps","baseCurrency","restCurrencies","converter","errorWithAPI","getCurrencies","a","fetch","then","res","json","AppContext","createContext","AppProvider","children","useContext","defaultBaseCurrency","converterDefault","defaultErrorWithAPI","useState","setBaseCurrency","currencies","setCurrencies","setConverter","setErrorWithAPI","updateCurrencies","newBaseCurrency","getCurrenciesFromApi","data","rates","catch","err","useEffect","Provider","value","handleUpdateBaseCurrency","handleUpdateCurrencies","handleChangeConverter","ActiveCurrency","className","BaseCurrencyForm","newFormCurrency","setNewFormCurrency","listOfCurrenciesForForm","Object","keys","map","currency","String","onSubmit","event","preventDefault","name","onChange","target","type","ConverterForm","formValue","setFormValue","wrongValue","setWrongValue","wrongValueMessage","CurrencyTableRow","CurrenciesTable","tableRowsWithCurrencies","CurrenciesList","searchingCurrency","setSearchingCurrency","searchedCurrency","setSearchedCurrency","parseFloat","toFixed","filter","currencyValue","Number","includes","isAnyCurrencyOnList","length","toUpperCase","onClick","ErrorWithAPI","SiteContent","classForMain","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85c97ccd.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nconst API = \"https://api.exchangeratesapi.io/latest?base=\";\r\n\r\nconst defaultContextProps = {\r\n  baseCurrency: \"USD\",\r\n  restCurrencies: [],\r\n  converter: 1,\r\n  errorWithAPI: false,\r\n};\r\n\r\nconst getCurrencies = async (baseCurrency) => {\r\n  return await fetch(API + baseCurrency).then((res) => res.json());\r\n};\r\n\r\nexport const AppContext = createContext(defaultContextProps);\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const {\r\n    baseCurrency: defaultBaseCurrency,\r\n    restCurrencies,\r\n    converter: converterDefault,\r\n    errorWithAPI: defaultErrorWithAPI,\r\n  } = useContext(AppContext);\r\n  const [baseCurrency, setBaseCurrency] = useState(defaultBaseCurrency);\r\n  const [currencies, setCurrencies] = useState(restCurrencies);\r\n  const [converter, setConverter] = useState(converterDefault);\r\n  const [errorWithAPI, setErrorWithAPI] = useState(defaultErrorWithAPI);\r\n\r\n  const updateCurrencies = (newBaseCurrency = baseCurrency) => {\r\n    const getCurrenciesFromApi = getCurrencies(newBaseCurrency);\r\n    getCurrenciesFromApi\r\n      .then((data) => {\r\n        setCurrencies(data.rates);\r\n        setErrorWithAPI(false);\r\n      })\r\n      .catch((err) => {\r\n        setErrorWithAPI(true);\r\n      });\r\n  };\r\n\r\n  const handleUpdateCurrencies = (newBaseCurrency) => {\r\n    updateCurrencies(newBaseCurrency);\r\n  };\r\n\r\n  const handleUpdateBaseCurrency = (newBaseCurrency) => {\r\n    setBaseCurrency(newBaseCurrency);\r\n  };\r\n\r\n  const handleChangeConverter = (value) => {\r\n    setConverter(value);\r\n  };\r\n\r\n  useEffect(updateCurrencies, []);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        baseCurrency,\r\n        currencies,\r\n        converter,\r\n        errorWithAPI,\r\n        handleUpdateBaseCurrency,\r\n        handleUpdateCurrencies,\r\n        handleChangeConverter,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { AppContext } from \"./AppContext\";\r\nimport \"../sass/ActiveCurrency.scss\";\r\n\r\nconst ActiveCurrency = () => {\r\n  const { baseCurrency } = useContext(AppContext);\r\n  return (\r\n    <div className=\"active-currency\">\r\n      <p className=\"active-currency__text\">\r\n        Active currrency:\r\n        <span className=\"active-currency__currency\">{baseCurrency}</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActiveCurrency;\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nimport { AppContext } from \"./AppContext\";\r\n\r\nimport \"../sass/BaseCurrencyForm.scss\";\r\n\r\nconst BaseCurrencyForm = () => {\r\n  const { currencies, baseCurrency, handleUpdateBaseCurrency, handleUpdateCurrencies } = useContext(\r\n    AppContext\r\n  );\r\n  const [newFormCurrency, setNewFormCurrency] = useState(baseCurrency);\r\n\r\n  const currenciesArray = Object.keys(currencies).map((currency) => [\r\n    String(currency),\r\n  ]);\r\n\r\n  const listOfCurrenciesForForm = currenciesArray.map((currency) => (\r\n    <option value={currency[0]} key={currency[0]}>\r\n      {currency[0]}\r\n    </option>\r\n  ));\r\n\r\n  const handleChanageCurrency = ({ target }) => {\r\n    const { value } = target;\r\n    setNewFormCurrency(value);\r\n  };\r\n\r\n  const handleSubmitNewBaseCurrency = (event) => {\r\n    event.preventDefault();\r\n    handleUpdateBaseCurrency(newFormCurrency);\r\n    handleUpdateCurrencies(newFormCurrency);\r\n  };\r\n\r\n  return (\r\n    <form className=\"base-currency-form\" onSubmit={handleSubmitNewBaseCurrency}>\r\n      <select\r\n        className=\"base-currency-form__selector\"\r\n        name=\"currency\"\r\n        value={newFormCurrency}\r\n        onChange={handleChanageCurrency}\r\n      >\r\n        {listOfCurrenciesForForm}\r\n      </select>\r\n      <input type=\"submit\" className=\"button\" value=\"Set new currency\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BaseCurrencyForm;\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nimport { AppContext } from \"./AppContext\";\r\n\r\nimport \"../sass/ConverterFrom.scss\";\r\n\r\nconst ConverterForm = () => {\r\n  const { converter, handleChangeConverter } = useContext(AppContext);\r\n  const [formValue, setFormValue] = useState(converter);\r\n  const [wrongValue, setWrongValue] = useState(false);\r\n\r\n  const handleChangeFormValue = ({ target }) => setFormValue(target.value);\r\n  const handleSubmitFormValue = (event) => {\r\n    event.preventDefault();\r\n    if (formValue >= 0) {\r\n      handleChangeConverter(formValue);\r\n      setWrongValue(false);\r\n      setFormValue(0);\r\n    } else {\r\n      setWrongValue(true);\r\n    }\r\n  };\r\n\r\n  const wrongValueMessage = wrongValue ? (\r\n    <p className=\"converter-form__warning\">You cannot pass negative value!</p>\r\n  ) : null;\r\n\r\n  return (\r\n    <form className=\"converter-form\" onSubmit={handleSubmitFormValue}>\r\n      <label>\r\n        {wrongValueMessage}\r\n        <input\r\n          type=\"number\"\r\n          className=\"converter-form__input\"\r\n          value={formValue}\r\n          onChange={handleChangeFormValue}\r\n        />\r\n      </label>\r\n      <input type=\"submit\" className=\"button\" value=\"Set new converter\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ConverterForm;\r\n","import React from 'react';\r\n\r\nconst CurrencyTableRow = ({name, value}) => {\r\n    return ( \r\n        <tr>\r\n            <td>{name}</td>\r\n            <td>{value}</td>\r\n        </tr>\r\n     );\r\n}\r\n \r\nexport default CurrencyTableRow;","import React from 'react';\r\n\r\nconst CurrenciesTable = ({tableRowsWithCurrencies}) => {\r\n    return ( \r\n    <table className=\"currencies-table\">\r\n        <thead className=\"currencies-table__header\">\r\n            <tr>\r\n                <th>Currency</th>\r\n                <th>Value</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody className=\"currencies-table__body\">\r\n            {tableRowsWithCurrencies}\r\n        </tbody>\r\n    </table>\r\n     );\r\n}\r\n \r\nexport default CurrenciesTable;","import React, { useContext, useState } from 'react';\r\n\r\nimport CurrencyTableRow from './CurrencyTableRow'\r\nimport CurrenciesTable from './CurrenciesTable'\r\nimport {AppContext} from './AppContext';\r\n\r\nimport '../sass/CurrenciesList.scss';\r\n\r\nconst CurrenciesList = () => {\r\n    const {currencies, converter} = useContext(AppContext);\r\n    const [searchingCurrency, setSearchingCurrency] = useState('');\r\n    const [searchedCurrency, setSearchedCurrency] = useState('')\r\n\r\n    const currenciesArray =  Object.keys(currencies).map((currency) => [\r\n        String(currency),\r\n        parseFloat(currencies[currency]).toFixed(2)\r\n      ]).filter(currency => { //filter to remove didn't match currencies\r\n        const currencyValue = Number((currency[1] * converter).toFixed(2))\r\n        currency[1] = currencyValue;\r\n        if((searchedCurrency === '' || currency[0].includes(searchedCurrency)) && currencyValue !== 0.00){\r\n            return  currency;\r\n        }\r\n      })\r\n\r\n    const tableRowsWithCurrencies = currenciesArray.map(currency => {\r\n        return  <CurrencyTableRow name={currency[0]} value={currency[1]} key={currency[0]}/>;\r\n    })\r\n\r\n    const isAnyCurrencyOnList = tableRowsWithCurrencies.length > 0 ? <CurrenciesTable tableRowsWithCurrencies={tableRowsWithCurrencies}/> : <p className=\"currencies-table__message\">We didn't find any currenyc, sorry...</p>;\r\n\r\n    const handleSetInputSearchingValue = ({target}) => {\r\n        const {value} = target;\r\n        setSearchingCurrency(value.toUpperCase());\r\n    }\r\n\r\n    const handleSubmitSearching = () =>{\r\n        setSearchedCurrency(searchingCurrency)\r\n        setSearchingCurrency('');\r\n    }\r\n\r\n    return ( \r\n        <section className=\"table-with-currencies\">\r\n            <h2 className=\"table-with-currencies__header\">List of currencies:</h2>\r\n            <div className=\"search\">\r\n                <label>\r\n                    <p className=\"search__text\">Search currency:</p>\r\n                    <input type=\"search\" className=\"search__input\" value={searchingCurrency} onChange={handleSetInputSearchingValue}/>\r\n                </label>\r\n                <button className=\"fas fa-search button\" onClick={handleSubmitSearching}></button>\r\n            </div>\r\n            {isAnyCurrencyOnList}\r\n        </section>\r\n     );\r\n}\r\n \r\nexport default CurrenciesList;","import React from 'react';\r\n\r\nimport '../sass/ErrorWithAPI.scss';\r\n\r\nconst ErrorWithAPI = () => {\r\n    return ( \r\n        <div className=\"error\">\r\n            <p className=\"error__text\">Sorry, we have a problem with API, try again later :)</p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ErrorWithAPI;","import React, {useContext} from 'react';\r\n\r\nimport ActiveCurrency from \"./ActiveCurrency.jsx\";\r\nimport BaseCurrencyForm from \"./BaseCurrencyForm.jsx\";\r\nimport ConverterForm from \"./ConverterForm.jsx\";\r\nimport CurrenciesList from \"./CurrenciesList.jsx\";\r\nimport ErrorWithAPI from \"./ErrorWithAPI.jsx\";\r\n\r\nimport {AppContext} from './AppContext';\r\n\r\nconst SiteContent = () => {\r\n    const { errorWithAPI, currencies } = useContext(AppContext);\r\n    \r\n    const isBeforeAPIDownload = currencies.length === 0;\r\n    const classForMain = isBeforeAPIDownload ? 'not-visible' : null;\r\n\r\n    const siteContent = errorWithAPI ? (\r\n      <ErrorWithAPI />\r\n    ) : (\r\n      <main className={classForMain}>\r\n        <ActiveCurrency />\r\n        <ConverterForm />\r\n        <BaseCurrencyForm />\r\n        <CurrenciesList />\r\n      </main>\r\n    );\r\n    return siteContent;\r\n}\r\n \r\nexport default SiteContent;","import React from \"react\";\nimport SiteContent from \"./SiteContent\";\n\nimport { AppProvider } from \"./AppContext\";\n\nconst App = () => {\n  return (\n    <AppProvider>\n      <SiteContent />\n    </AppProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./main.scss\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}